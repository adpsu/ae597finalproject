import pandas as pd
from bs4 import BeautifulSoup

# Define a function to read HTML-like .xls file and return a DataFrame
def read_html_like_xls(file_path, skiprows=7):
    with open(file_path, 'r', encoding='utf-8') as file:
        soup = BeautifulSoup(file, 'html.parser')
        
        # Find all tables in the HTML
        tables = soup.find_all('table')
        
        # Assuming the table we need is the first one (adjust if necessary)
        table = tables[0]
        
        # Read the HTML table into a DataFrame
        df = pd.read_html(str(table))[0]
        
        # Skip the first 'skiprows' rows
        df = df.iloc[skiprows:]
        
        return df

# Define the file paths for the three HTML-like .xls files
file1 = 'path/to/your/first_excel_file.xls'
file2 = 'path/to/your/second_excel_file.xls'
file3 = 'path/to/your/third_excel_file.xls'

# Load the HTML files
df1 = read_html_like_xls(file1)
df2 = read_html_like_xls(file2)
df3 = read_html_like_xls(file3)

# Merge the DataFrames
merged_df = pd.concat([df1, df2, df3], ignore_index=True)

# Define the custom column names
custom_column_names = ['Column1', 'Column2', 'Column3', 'Column4', 'Column5']  # Replace with your actual column names

# Assign the custom column names to the merged DataFrame
merged_df.columns = custom_column_names

# Save the merged DataFrame to a CSV file
merged_df.to_csv('path/to/save/merged_file.csv', index=False)

print("Merged DataFrame saved as 'merged_file.csv'.")

