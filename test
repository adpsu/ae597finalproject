import pandas as pd
import numpy as np

# Load datasets
drayage_df = pd.read_csv('Drayage_Itineraries_20240828.csv')
port_df = pd.read_csv('port_df.csv')

# Define the transformation and resampling process
def resample_itineraries_for_port(drayage_df, port_number, weekly_visits):
    sampled_data = []
    vehicle_sequence = {}
    
    while len(sampled_data) < weekly_visits:
        # Randomly select a vehicle
        vehicle_to_sample = drayage_df['vet_id'].sample().iloc[0]
        vehicle_data = drayage_df[drayage_df['vet_id'] == vehicle_to_sample]
        
        # Track sequence number for the vehicle
        if vehicle_to_sample not in vehicle_sequence:
            vehicle_sequence[vehicle_to_sample] = 1
        else:
            vehicle_sequence[vehicle_to_sample] += 1
        
        # Add vehicle data to sampled_data
        sampled_data.append(vehicle_data)
    
    sampled_df = pd.concat(sampled_data).head(weekly_visits)
    return sampled_df, vehicle_sequence

# Process each port separately
all_transformed_data = []

for _, port_row in port_df.iterrows():
    port_number = port_row['port_number']
    weekly_visits = port_row['weekly_truck_visit']
    
    # Resample itineraries for the current port
    sampled_df, vehicle_sequence = resample_itineraries_for_port(drayage_df, port_number, weekly_visits)
    
    # Transform the sampled data as per requirements
    transformed_data = []
    for i, (vehicle_id, vehicle_data) in enumerate(sampled_df.groupby('vet_id')):
        for seq, row in vehicle_data.iterrows():
            veh_id_seq = f"{port_number:03d}{vehicle_sequence[vehicle_id]:05d}"
            trip_id = seq
            
            start_time_day = row['start_time_sec'] // 86400  # Calculate the day part
            start_time_sec = row['start_time_sec'] % 86400  # Calculate the seconds part
            start_time = f"{int(start_time_day)}.{int(start_time_sec)}"

            end_time_day = row['end_time_sec'] // 86400  # Calculate the day part
            end_time_sec = row['end_time_sec'] % 86400  # Calculate the seconds part
            end_time = f"{int(end_time_day)}.{int(end_time_sec)}"
            
            dwell_time = row['end_time_sec'] - row['start_time_sec']
            
            transformed_data.append({
                'port_id': port_number,
                'veh_id': veh_id_seq,  # Corrected here
                'travel_day_id': trip_id,
                'start_time': start_time,
                'end_time': end_time,
                'destination_description': row['destination_type'],
                'dwell_time': dwell_time,
                'miles': row['trip_distance_mi'],
                'destination': 'public',
                'evse_at_destination': row['evse_at_destination'],
                'day_of_week': row['weekday_moday_zero'],
                'destination_id': 1
            })
    
    all_transformed_data.extend(transformed_data)

# Convert to DataFrame
final_df = pd.DataFrame(all_transformed_data)

# Save the final DataFrame to CSV
final_df.to_csv('Resampled_Drayage_Itineraries.csv', index=False)
