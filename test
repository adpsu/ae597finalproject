import os
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import Select

def download_airport_data(airport_code, from_date, to_date, download_dir):
    # Set up the webdriver (ensure the path to your chromedriver is correct)
    options = webdriver.ChromeOptions()
    prefs = {"download.default_directory": download_dir}
    options.add_experimental_option("prefs", prefs)
    
    driver = webdriver.Chrome(options=options)

    try:
        # Navigate to the main page
        url = "https://aspm.faa.gov/apm/sys/main.asp"
        driver.get(url)

        # Wait for the page to load
        time.sleep(2)

        # Click the "Aviation System Performance Metrics (ASPM)" tab
        airport_analysis_tab = driver.find_element(By.LINK_TEXT, "Aviation System Performance Metrics (ASPM)")
        airport_analysis_tab.click()

        # Wait and switch to the new window
        time.sleep(2)
        window_handles = driver.window_handles
        driver.switch_to.window(window_handles[0])

        # Click the "Airport Analysis" tab
        airport_analysis_tab = driver.find_element(By.LINK_TEXT, "Airport Analysis")
        airport_analysis_tab.click()
        
        # Wait and switch to the new window
        time.sleep(2)
        window_handles = driver.window_handles
        driver.switch_to.window(window_handles[0])
        
        # Click the "Output" tab
        airport_analysis_tab = driver.find_element(By.LINK_TEXT, "Output")
        airport_analysis_tab.click()
        
        # Wait and switch to the new window
        time.sleep(2)
        window_handles = driver.window_handles
        driver.switch_to.window(window_handles[0])

        # Wait for the page to load
        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.TAG_NAME, "body")))

        # Select "Analysis: All Flights"
        analysis_all_flights = driver.find_element(By.CSS_SELECTOR, "input[name='reptype'][value='r1']")
        analysis_all_flights.click()

        # Select "MS Excel" as the format
        ms_excel_format = driver.find_element(By.CSS_SELECTOR, "input[name='reportformat'][value='msexcel']")
        ms_excel_format.click()

        # Ensure "No Sub-Totals" checkbox is checked
        no_sub_totals_checkbox = driver.find_element(By.CSS_SELECTOR, "input[name='nosubtot'][value='1']")
        if not no_sub_totals_checkbox.is_selected():
            no_sub_totals_checkbox.click()

        # Click the "Dates" tab
        dates_tab = driver.find_element(By.LINK_TEXT, "Dates")
        dates_tab.click()
        
        # Wait and switch to the new window
        time.sleep(2)
        window_handles = driver.window_handles
        driver.switch_to.window(window_handles[0])

        # Select "Date Ranges" and set the date range
        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, "input[name='dtype'][value='r']")))
        date_range = driver.find_element(By.CSS_SELECTOR, "input[name='dtype'][value='r']")
        date_range.click()

        # Set the "From" date
        from_month, from_day, from_year = from_date.split('-')
        to_month, to_day, to_year = to_date.split('-')

        Select(driver.find_element(By.NAME, "fm_r")).select_by_value(from_month)
        Select(driver.find_element(By.NAME, "fd_r")).select_by_value(from_day)
        Select(driver.find_element(By.NAME, "fy_r")).select_by_value(from_year)

        # Set the "To" date
        Select(driver.find_element(By.NAME, "tm_r")).select_by_value(to_month)
        Select(driver.find_element(By.NAME, "td_r")).select_by_value(to_day)
        Select(driver.find_element(By.NAME, "ty_r")).select_by_value(to_year)

        # Click the "Airports" tab
        airports_tab = driver.find_element(By.LINK_TEXT, "Airports")
        airports_tab.click()
        
        # Wait and switch to the new window
        time.sleep(2)
        window_handles = driver.window_handles
        driver.switch_to.window(window_handles[0])

        # Enter Airport code, for example "JFK" into the airport code field
        airport_code_input = driver.find_element(By.ID, "locQuick")
        airport_code_input.clear()
        airport_code_input.send_keys(airport_code)

        # Click the "Go" button
        go_button = driver.find_element(By.XPATH, "//input[@type='button' and @value='Go']")
        go_button.click()

        # Click the "Grouping" tab
        grouping_tab = driver.find_element(By.LINK_TEXT, "Grouping")
        grouping_tab.click()
        
        # Wait and switch to the new window
        time.sleep(2)
        window_handles = driver.window_handles
        driver.switch_to.window(window_handles[0])

        # Select all fields using `addFld`, `addHR`, and `addGMTHR`
        all_links = driver.find_elements(By.XPATH, "//a[contains(@href, 'javascript:addFld')]") + \
                    driver.find_elements(By.XPATH, "//a[contains(@href, 'javascript:addHR')]") + \
                    driver.find_elements(By.XPATH, "//a[contains(@href, 'javascript:addGMTHR')]")

        for link in all_links:
            link.click()
            time.sleep(1)  # Optional: Delay for each click

        # Click the "Run" button
        run_tab = driver.find_element(By.LINK_TEXT, "Run")
        run_tab.click()

        # Wait and switch to the new window
        time.sleep(10)
        window_handles = driver.window_handles
        driver.switch_to.window(window_handles[0])

        # Wait for the download to finish
        download_wait(download_dir)

    finally:
        # Close the browser when done
        driver.quit()

def download_wait(directory, timeout=600):
    """
    Wait for the downloads to complete within a specified directory.
    """
    seconds = 0
    while seconds < timeout:
        if not any([filename.endswith(".crdownload") for filename in os.listdir(directory)]):
            return True
        time.sleep(1)
        seconds += 1
    return False


# Example usage:
download_dir = ""  # Change to your download folder
download_airport_data("IAD", "01-01-2023", "12-31-2023", download_dir)
