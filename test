# Adjusting the code to ensure truck numbers are in round numbers
import pandas as pd
import numpy as np
import os

# Sample port_df
port_df = pd.DataFrame({
    'port_number': [10, 20],
    'weekly_truck_visit': [600, 800]
})

# Sample itinerary data for 6 days (similar to the sample data we created)
# Assuming it's the same as the sample data
drayage_itinerary_files = [sample_df for _ in range(6)]  # Representing 6 days

# Step 1: Calculate Daily Truck Ratios
daily_truck_counts = [df.shape[0] for df in drayage_itinerary_files]
total_truck_count = sum(daily_truck_counts)
daily_ratios = [count / total_truck_count for count in daily_truck_counts]

# Step 2: Distribute Weekly Truck Visits with Normal Distributed Error
distributed_truck_visits = port_df.copy()
for idx, row in distributed_truck_visits.iterrows():
    visits_per_day = [int(row['weekly_truck_visit'] * ratio) for ratio in daily_ratios]
    # Add normal distributed error with mean=0 and std=25
    visits_per_day = [max(0, int(visit + np.random.normal(0, 25))) for visit in visits_per_day]
    distributed_truck_visits.at[idx, 'visits_per_day'] = visits_per_day

# Step 3: Resample Truck Itineraries with Round Truck Numbers
def resample_itineraries(itinerary_df, total_visits):
    sampled_data = []
    while len(sampled_data) < total_visits:
        truck_to_sample = itinerary_df['truck_no'].sample().iloc[0]
        truck_data = itinerary_df[itinerary_df['truck_no'] == truck_to_sample]
        sampled_data.append(truck_data)
    sampled_df = pd.concat(sampled_data).head(total_visits)
    sampled_df['truck_no'] = sampled_df['truck_no'].str.extract('(\d+)').astype(int)
    return sampled_df

# Step 4: Save Data in Structured Folders
output_folder = 'output'
os.makedirs(output_folder, exist_ok=True)

for idx, row in distributed_truck_visits.iterrows():
    port_number = row['port_number']
    visits_per_day = row['visits_per_day']
    
    port_folder = os.path.join(output_folder, f'port_{port_number}')
    os.makedirs(port_folder, exist_ok=True)
    
    for i, day_visits in enumerate(visits_per_day):
        sampled_df = resample_itineraries(drayage_itinerary_files[i], day_visits)
        
        output_file = os.path.join(port_folder, f'port_{port_number}_drayage_itenary_day_{i+1}.csv')
        sampled_df.to_csv(output_file, index=False, columns=[
            'truck_no', 'vet_type', 'origin_type', 'start_time_sec', 
            'end_time_sec', 'destination_type', 'trip_distance_mi',
            'trip_duration_sec', 'stop_duration_sec'
        ])

print("Sampling with error term and saving completed successfully.")

